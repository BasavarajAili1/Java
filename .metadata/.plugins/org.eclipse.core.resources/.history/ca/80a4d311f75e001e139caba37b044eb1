package com.kodnest.problemsBinarySeacrh;

// Find first and last position of target element
public class FirstAndLastPosition {

	public static void main(String[] args) {
		int[] arr = {5, 7, 7, 7, 8, 8, 10};
		int target = 7;
		
		int[] ans = findFirstLast(arr, target);
		System.out.println(ans);
	}
	static int[] findFirstLast(int[] arr, int target) {
		//apply binary search
		
		int[] ans = {-1, -1};
		
		// check for first occurrence if target found 
		arr[0] = search(arr, target, true);
		arr[1] = search(arr, target, false);
		
		return ans;
        
	}
	
	// this method just returns the index value of target
	static int search(int[] arr, int target, boolean findStartIndex) {
		int ans = -1;
		int start = 0;
        int end  = arr.length-1;

        while (start<=end)
        {
        	//find the middle element
            int mid = start + (end - start)/2;

            if(target > arr[mid]){
                start = mid+1;
            }
            else if (target < arr[mid]){
                end = mid-1;
            }
            else {
            	// potential ans found
                ans = mid;
                if (findStartIndex) {
                	end = mid - 1;
                }
                else {
                	start = mid + 1;
                }
            }
        }
        return ans;
	}
}
